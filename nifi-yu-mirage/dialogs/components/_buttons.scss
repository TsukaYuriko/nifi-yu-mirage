/*============================================================================*\
| Buttons                                                                      |
\*============================================================================*/

// Simple buttons
// These are the usually square-shaped buttons with mostly icons inside

button
{
    
    // Container
    background: $color-button;
    border: 1px solid $color-button-border;
    color: $color-button-icon-active;
    
    &:hover
    {
        background: $color-button-hover;
        border: 1px solid $color-button-border-hover;
    }
    
    // Icons
    .fa, &.fa
    {
        color: $color-button-icon-active;
    }
    
    // Disabled buttons
    &[disabled]
    {
        background: $color-button !important;
        border: 1px solid $color-button-border !important;
        color: $color-button-icon-inactive !important;
    }
    
}

// Dialog buttons
/*
These are the elongated buttons with text inside that exit out of dialogs.
Unfortunately, buttons of different colors tend to not have different classes,
or any classes at all, for that matter. Sometimes, they do have different
classes, so not all buttons that look like this are set up the same way,
which makes this even more messy to handle. They are usually colored using
inline styles in NiFi (potentially by a script?).
The only reliable way to address them seems to be by their inline styles.
*/

// Primary buttons (usually positive, e.g. "Apply" or other confirming actions)
@mixin dialog-button-primary
{
    background: $color-dialog-button-primary !important;
    color: $color-dialog-button-primary-text !important;
}

@mixin dialog-button-primary-hover
{
    background: $color-dialog-button-primary-hover !important;
    color: $color-dialog-button-primary-text !important;
}

// Secondary buttons (usually negative, e.g. "Cancel" or other declining actions)
@mixin dialog-button-secondary
{
    background: $color-dialog-button-secondary !important;
    color: $color-dialog-button-secondary-text !important;
}

@mixin dialog-button-secondary-hover
{
    background: $color-dialog-button-secondary-hover !important;
    color: $color-dialog-button-secondary-text !important;
}

// Default dialog button styles
// These should catch a few outlier cases that attempt to use normalized ways of addressing
div.button
{
    @include dialog-button-primary;
    
    &:hover
    {
        @include dialog-button-primary-hover;
    }
}

div.secondary-button
{
    @include dialog-button-secondary;
    
    &:hover
    {
        @include dialog-button-secondary-hover;
    }
}

/*
This fixes an edge case when a user that has no permission
to modify a component inspects a value in a processor's settings.
The dialog that pops up doesn't inline-color the button as it would
when a user with permissions were to open it, but instead draws its
style from this "default" fallback style.
*/
.property-detail div.button
{
    @include dialog-button-primary;
}

.dialog-buttons .button,
.combo-editor div .button, .combo-editor div .secondary-button,
.ui-draggable .button, .ui-draggable .secondary-button,
.property-detail .button, .property-detail .secondary-button
{
    &[style*="#{$color-source-original-dialog-button-primary}"]
    {
        @include dialog-button-primary;
    }
    
    &[style*="#{$color-source-original-dialog-button-primary-hover}"]
    {
        @include dialog-button-primary-hover;
    }
    
    &[style*="#{$color-source-original-dialog-button-secondary}"]
    {
        @include dialog-button-secondary;
    }
    
    &[style*="#{$color-source-original-dialog-button-secondary-hover}"]
    {
        @include dialog-button-secondary-hover;
    }
}

/*
Dialog buttons in specific contexts (e.g. Configure dialog of
process groups, Controller Settings) where there's only an "Apply"
button and no others. Unfortunately, these don't share selectors with
/the buttons above because they (fortunately?) lack the "style=..."
BS the ones above have.
*/

.settings-buttons .button
{
    
    @include dialog-button-primary;
    
    &:hover:not(.disabled-button)
    {
        @include dialog-button-primary-hover;
    }
    
}

// "Stop & configure" button
.dialog-status-bar-buttons
{
    
    .button
    {
        @include dialog-button-secondary;
        
        &:hover
        {
            @include dialog-button-secondary-hover;
        }
    }
    
    .stop-configure-icon
    {
        
        &::after
        {
            // Disable default styles
            -webkit-text-stroke-width: 0 !important;
            -webkit-text-stroke-color: $color-accent !important;
            
            // Apply better styles
            color: $color-dialog-button-secondary;
        }
    }
    
}
